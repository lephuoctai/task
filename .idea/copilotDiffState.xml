<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/todo/task/ProjectListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/todo/task/ProjectListActivity.java" />
              <option name="originalContent" value="package com.todo.task;&#10;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.todo.task.user.User;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class ProjectListActivity extends AppCompatActivity {&#10;    private LinearLayout listRecent, listOld;&#10;    private ArrayList&lt;Task&gt; taskList = MainActivity.taskList;&#10;    private enum SortType { NAME, DATE }&#10;    private SortType sortType = SortType.NAME;&#10;    private boolean isSortAZ = true;&#10;    private TextView tvSortType;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_project_list);&#10;        listRecent = findViewById(R.id.list_recent);&#10;        listOld = findViewById(R.id.list_old);&#10;        tvSortType = findViewById(R.id.tvSortType);&#10;&#10;        // Nút quay lại&#10;        findViewById(R.id.logout).setOnClickListener(v -&gt; {&#10;            User.logout(this);&#10;            Log.d(&quot;TM&quot;, &quot;--User logged out&quot;);&#10;            finish();&#10;        });&#10;&#10;        // Nút thông báo: Hiển thị tên các project còn dưới 3 ngày&#10;        findViewById(R.id.btnNoti).setOnClickListener(v -&gt; {&#10;            StringBuilder sb = new StringBuilder();&#10;            for (Task t : taskList) {&#10;                if (t.dayLeft() &gt; 0 &amp;&amp; t.dayLeft() &lt; 3) {&#10;                    sb.append(&quot;- &quot;).append(t.getName()).append(&quot; (còn &quot;).append(t.dayLeft()).append(&quot; ngày)\n&quot;);&#10;                }&#10;            }&#10;            String msg = sb.length() &gt; 0 ? sb.toString() : &quot;Không có project nào sắp hết hạn!&quot;;&#10;            android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;            builder.setTitle(&quot;Project sắp hết hạn (&lt;3 ngày)&quot;)&#10;                .setMessage(msg)&#10;                .setPositiveButton(&quot;Đóng&quot;, null)&#10;                .show();&#10;        });&#10;&#10;        // Nút thêm mới&#10;        findViewById(R.id.btnNewTask).setOnClickListener(v -&gt;&#10;            startActivity(new android.content.Intent(this, addProjectActivity.class))&#10;        );&#10;&#10;        // Sắp xếp khi nhấn vào icon sort&#10;        ImageView sortBtn = findViewById(R.id.ic_sort);&#10;        if (sortBtn != null) {&#10;            sortBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;        });&#10;        }&#10;&#10;        // Nút dropdown ở phần sort: ví dụ hiển thị menu chọn kiểu sort&#10;        ImageView sortDropdownBtn = findViewById(R.id.sort_ic_dropdown);&#10;        if (sortDropdownBtn != null) {&#10;            sortDropdownBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateSortTypeText();&#10;        renderTasks();&#10;    }&#10;&#10;    @Override&#10;    protected void onPause() {&#10;        super.onPause();&#10;        TaskStorage.saveTasks(this, taskList);&#10;    }&#10;&#10;    private void updateSortTypeText() {&#10;        if (tvSortType == null) return;&#10;        if (sortType == SortType.NAME) {&#10;            tvSortType.setText(isSortAZ ? &quot;A-Z&quot; : &quot;Z-A&quot;);&#10;        } else {&#10;            tvSortType.setText(isSortAZ ? &quot;Ngày gần nhất&quot; : &quot;Ngày xa nhất&quot;);&#10;        }&#10;    }&#10;&#10;    private void renderTasks() {&#10;        listRecent.removeAllViews();&#10;        listOld.removeAllViews();&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;&#10;        // Hiển thị dự án gần nhất nhất (theo thời gian cập nhật) ở listRecent&#10;        // Sắp xếp theo thời gian chỉnh sửa gần nhất (updatedAt), xử lý null&#10;        Collections.sort(taskList, (t1, t2) -&gt; {&#10;            if (t1.getUpdatedAt() == null &amp;&amp; t2.getUpdatedAt() == null) return 0;&#10;            if (t1.getUpdatedAt() == null) return 1;&#10;            if (t2.getUpdatedAt() == null) return -1;&#10;            return t2.getUpdatedAt().compareTo(t1.getUpdatedAt());&#10;        });&#10;&#10;        // Hiển thị dự án gần nhất ở listRecent với layout item_task_recent&#10;        if (!taskList.isEmpty()) {&#10;            Task recentTask = taskList.get(0);&#10;            View recentView = inflater.inflate(R.layout.item_task_recent, listRecent, false);&#10;            LinearLayout infoLayout = recentView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = recentView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(recentTask.getName());&#10;                if (tvStatus != null) tvStatus.setText(recentTask.getStatus());&#10;            }&#10;&#10;            // Tạo listener cho việc hiển thị popup&#10;            View.OnClickListener openPopupListener = v -&gt; {&#10;                // Tạo AlertDialog với layout tùy chỉnh&#10;                android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                builder.setTitle(recentTask.getName());&#10;&#10;                // Hiển thị mô tả của dự án&#10;                builder.setMessage(recentTask.getQuest());&#10;&#10;                // Thêm các nút tùy chọn&#10;                builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                    // Mở EditProjectActivity để chỉnh sửa&#10;                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                    intent.putExtra(&quot;name&quot;, recentTask.getName());&#10;                    intent.putExtra(&quot;desc&quot;, recentTask.getQuest());&#10;                    intent.putExtra(&quot;group&quot;, recentTask.getGroup());&#10;                    intent.putExtra(&quot;start&quot;, recentTask.getDateBegin());&#10;                    intent.putExtra(&quot;end&quot;, recentTask.getDateCompleted());&#10;                    intent.putExtra(&quot;position&quot;, 0);&#10;                    startActivity(intent);&#10;                });&#10;&#10;                builder.setNegativeButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                    // Xác nhận xóa&#10;                    new android.app.AlertDialog.Builder(this)&#10;                        .setTitle(&quot;Xác nhận xóa&quot;)&#10;                        .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                        .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                            MainActivity.taskList.remove(0);&#10;                            TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                            renderTasks();&#10;                            Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                        })&#10;                        .setNegativeButton(&quot;Hủy&quot;, null)&#10;                        .show();&#10;                });&#10;&#10;                builder.show();&#10;            };&#10;&#10;            // Gán sự kiện click cho cả item và nút dropdown&#10;            if (icDropdown != null) {&#10;                icDropdown.setOnClickListener(openPopupListener);&#10;            }&#10;            // Thêm sự kiện click cho toàn bộ view&#10;            recentView.setOnClickListener(openPopupListener);&#10;&#10;            listRecent.addView(recentView);&#10;        }&#10;&#10;        // Tạo danh sách riêng cho các dự án cũ để sắp xếp&#10;        ArrayList&lt;Task&gt; oldTasks = new ArrayList&lt;&gt;();&#10;        for (int i = 1; i &lt; taskList.size(); i++) {&#10;            oldTasks.add(taskList.get(i));&#10;        }&#10;&#10;        // Sắp xếp danh sách dự án cũ theo tiêu chí đã chọn&#10;        if (sortType == SortType.NAME) {&#10;            // Sắp xếp theo tên&#10;            Collections.sort(oldTasks, (t1, t2) -&gt; {&#10;                int result = t1.getName().compareToIgnoreCase(t2.getName());&#10;                return isSortAZ ? result : -result;&#10;            });&#10;        } else {&#10;            // Sắp xếp theo ngày hoàn thành&#10;            Collections.sort(oldTasks, (t1, t2) -&gt; {&#10;                if (t1.getDateCompleted() == null &amp;&amp; t2.getDateCompleted() == null) return 0;&#10;                if (t1.getDateCompleted() == null) return 1;&#10;                if (t2.getDateCompleted() == null) return -1;&#10;                int result = t1.getDateCompleted().compareTo(t2.getDateCompleted());&#10;                return isSortAZ ? result : -result;&#10;            });&#10;        }&#10;&#10;        // Hiển thị các dự án cũ đã sắp xếp ở listOld với layout item_task_old&#10;        for (int i = 0; i &lt; oldTasks.size(); i++) {&#10;            Task task = oldTasks.get(i);&#10;            View oldView = inflater.inflate(R.layout.item_task_old, listOld, false);&#10;            LinearLayout infoLayout = oldView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = oldView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(task.getName());&#10;                if (tvStatus != null) tvStatus.setText(task.getStatus());&#10;            }&#10;&#10;            // Tìm vị trí thực của task trong taskList chính&#10;            final int taskIndex = MainActivity.taskList.indexOf(task);&#10;&#10;            // Tạo listener cho việc hiển thị popup&#10;            View.OnClickListener openPopupListener = v -&gt; {&#10;                // Tạo AlertDialog với layout tùy chỉnh&#10;                android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                builder.setTitle(task.getName());&#10;&#10;                // Hiển thị mô tả của dự án&#10;                builder.setMessage(task.getQuest());&#10;&#10;                // Thêm các nút tùy chọn&#10;                builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                    // Mở EditProjectActivity để chỉnh sửa&#10;                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                    intent.putExtra(&quot;name&quot;, task.getName());&#10;                    intent.putExtra(&quot;desc&quot;, task.getQuest());&#10;                    intent.putExtra(&quot;group&quot;, task.getGroup());&#10;                    intent.putExtra(&quot;start&quot;, task.getDateBegin());&#10;                    intent.putExtra(&quot;end&quot;, task.getDateCompleted());&#10;                    intent.putExtra(&quot;position&quot;, taskIndex);&#10;                    startActivity(intent);&#10;                });&#10;&#10;                            .setNegativeButton(&quot;Hủy&quot;, null)&#10;                            .show();&#10;                    });&#10;&#10;                    builder.show();&#10;                });&#10;            }&#10;&#10;            listOld.addView(oldView);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.todo.task;&#10;&#10;import android.os.Bundle;&#10;import android.util.Log;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;&#10;import com.todo.task.user.User;&#10;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class ProjectListActivity extends AppCompatActivity {&#10;    private LinearLayout listRecent, listOld;&#10;    private ArrayList&lt;Task&gt; taskList = MainActivity.taskList;&#10;    private enum SortType { NAME, DATE }&#10;    private SortType sortType = SortType.NAME;&#10;    private boolean isSortAZ = true;&#10;    private TextView tvSortType;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_project_list);&#10;        listRecent = findViewById(R.id.list_recent);&#10;        listOld = findViewById(R.id.list_old);&#10;        tvSortType = findViewById(R.id.tvSortType);&#10;&#10;        // Nút quay lại&#10;        findViewById(R.id.logout).setOnClickListener(v -&gt; {&#10;            User.logout(this);&#10;            Log.d(&quot;TM&quot;, &quot;--User logged out&quot;);&#10;            finish();&#10;        });&#10;&#10;        // Nút thông báo: Hiển thị tên các project còn dưới 3 ngày&#10;        findViewById(R.id.btnNoti).setOnClickListener(v -&gt; {&#10;            StringBuilder sb = new StringBuilder();&#10;            for (Task t : taskList) {&#10;                if (t.dayLeft() &gt; 0 &amp;&amp; t.dayLeft() &lt; 3) {&#10;                    sb.append(&quot;- &quot;).append(t.getName()).append(&quot; (còn &quot;).append(t.dayLeft()).append(&quot; ngày)\n&quot;);&#10;                }&#10;            }&#10;            String msg = sb.length() &gt; 0 ? sb.toString() : &quot;Không có project nào sắp hết hạn!&quot;;&#10;            android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;            builder.setTitle(&quot;Project sắp hết hạn (&lt;3 ngày)&quot;)&#10;                .setMessage(msg)&#10;                .setPositiveButton(&quot;Đóng&quot;, null)&#10;                .show();&#10;        });&#10;&#10;        // Nút thêm mới&#10;        findViewById(R.id.btnNewTask).setOnClickListener(v -&gt;&#10;            startActivity(new android.content.Intent(this, addProjectActivity.class))&#10;        );&#10;&#10;        // Sắp xếp khi nhấn vào icon sort&#10;        ImageView sortBtn = findViewById(R.id.ic_sort);&#10;        if (sortBtn != null) {&#10;            sortBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;        }&#10;        }&#10;&#10;        // Nút dropdown ở phần sort: ví dụ hiển thị menu chọn kiểu sort&#10;        ImageView sortDropdownBtn = findViewById(R.id.sort_ic_dropdown);&#10;        if (sortDropdownBtn != null) {&#10;            sortDropdownBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateSortTypeText();&#10;        renderTasks();&#10;    }&#10;&#10;    @Override&#10;    protected void onPause() {&#10;        super.onPause();&#10;        TaskStorage.saveTasks(this, taskList);&#10;    }&#10;&#10;    private void updateSortTypeText() {&#10;        if (tvSortType == null) return;&#10;        if (sortType == SortType.NAME) {&#10;            tvSortType.setText(isSortAZ ? &quot;A-Z&quot; : &quot;Z-A&quot;);&#10;        } else {&#10;            tvSortType.setText(isSortAZ ? &quot;Ngày gần nhất&quot; : &quot;Ngày xa nhất&quot;);&#10;        }&#10;    }&#10;&#10;    private void renderTasks() {&#10;        listRecent.removeAllViews();&#10;        listOld.removeAllViews();&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;&#10;        // Hiển thị dự án gần nhất nhất (theo thời gian cập nhật) ở listRecent&#10;        // Sắp xếp theo thời gian chỉnh sửa gần nhất (updatedAt), xử lý null&#10;        Collections.sort(taskList, (t1, t2) -&gt; {&#10;            if (t1.getUpdatedAt() == null &amp;&amp; t2.getUpdatedAt() == null) return 0;&#10;            if (t1.getUpdatedAt() == null) return 1;&#10;            if (t2.getUpdatedAt() == null) return -1;&#10;            return t2.getUpdatedAt().compareTo(t1.getUpdatedAt());&#10;        });&#10;&#10;        // Hiển thị dự án gần nhất ở listRecent với layout item_task_recent&#10;        if (!taskList.isEmpty()) {&#10;            Task recentTask = taskList.get(0);&#10;            View recentView = inflater.inflate(R.layout.item_task_recent, listRecent, false);&#10;            LinearLayout infoLayout = recentView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = recentView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(recentTask.getName());&#10;                if (tvStatus != null) tvStatus.setText(recentTask.getStatus());&#10;            }&#10;&#10;            // Tạo listener cho việc hiển thị popup&#10;            View.OnClickListener openPopupListener = v -&gt; {&#10;                // Tạo AlertDialog với layout tùy chỉnh&#10;                android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                builder.setTitle(recentTask.getName());&#10;&#10;                // Hiển thị mô tả của dự án&#10;                builder.setMessage(recentTask.getQuest());&#10;&#10;                // Thêm các nút tùy chọn&#10;                builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                    // Mở EditProjectActivity để chỉnh sửa&#10;                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                    intent.putExtra(&quot;name&quot;, recentTask.getName());&#10;                    intent.putExtra(&quot;desc&quot;, recentTask.getQuest());&#10;                    intent.putExtra(&quot;group&quot;, recentTask.getGroup());&#10;                    intent.putExtra(&quot;start&quot;, recentTask.getDateBegin());&#10;                    intent.putExtra(&quot;end&quot;, recentTask.getDateCompleted());&#10;                    intent.putExtra(&quot;position&quot;, 0);&#10;                    startActivity(intent);&#10;                });&#10;&#10;                builder.setNegativeButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                    // Xác nhận xóa&#10;                    new android.app.AlertDialog.Builder(this)&#10;                        .setTitle(&quot;Xác nhận xóa&quot;)&#10;                        .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                        .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                            MainActivity.taskList.remove(0);&#10;                            TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                            renderTasks();&#10;                            Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                        })&#10;                        .setNegativeButton(&quot;Hủy&quot;, null)&#10;                        .show();&#10;                });&#10;&#10;                builder.show();&#10;            };&#10;&#10;            // Gán sự kiện click cho cả item và nút dropdown&#10;            if (icDropdown != null) {&#10;                icDropdown.setOnClickListener(openPopupListener);&#10;            }&#10;            // Thêm sự kiện click cho toàn bộ view&#10;            recentView.setOnClickListener(openPopupListener);&#10;&#10;            listRecent.addView(recentView);&#10;        }&#10;&#10;        // Tạo danh sách riêng cho các dự án cũ để sắp xếp&#10;        ArrayList&lt;Task&gt; oldTasks = new ArrayList&lt;&gt;();&#10;        for (int i = 1; i &lt; taskList.size(); i++) {&#10;            oldTasks.add(taskList.get(i));&#10;        }&#10;&#10;        // Sắp xếp danh sách dự án cũ theo tiêu chí đã chọn&#10;        if (sortType == SortType.NAME) {&#10;            // Sắp xếp theo tên&#10;            Collections.sort(oldTasks, (t1, t2) -&gt; {&#10;                int result = t1.getName().compareToIgnoreCase(t2.getName());&#10;                return isSortAZ ? result : -result;&#10;            });&#10;        } else {&#10;            // Sắp xếp theo ngày hoàn thành&#10;            Collections.sort(oldTasks, (t1, t2) -&gt; {&#10;                if (t1.getDateCompleted() == null &amp;&amp; t2.getDateCompleted() == null) return 0;&#10;                if (t1.getDateCompleted() == null) return 1;&#10;                if (t2.getDateCompleted() == null) return -1;&#10;                int result = t1.getDateCompleted().compareTo(t2.getDateCompleted());&#10;                return isSortAZ ? result : -result;&#10;            });&#10;        }&#10;&#10;        // Hiển thị các dự án cũ đã sắp xếp ở listOld với layout item_task_old&#10;        for (int i = 0; i &lt; oldTasks.size(); i++) {&#10;            Task task = oldTasks.get(i);&#10;            View oldView = inflater.inflate(R.layout.item_task_old, listOld, false);&#10;            LinearLayout infoLayout = oldView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = oldView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(task.getName());&#10;                if (tvStatus != null) tvStatus.setText(task.getStatus());&#10;            }&#10;&#10;            // Tìm vị trí thực của task trong taskList chính&#10;            final int taskIndex = MainActivity.taskList.indexOf(task);&#10;&#10;            // Tạo listener cho việc hiển thị popup&#10;            View.OnClickListener openPopupListener = v -&gt; {&#10;                // Tạo AlertDialog với layout tùy chỉnh&#10;                android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                builder.setTitle(task.getName());&#10;&#10;                // Hiển thị mô tả của dự án&#10;                builder.setMessage(task.getQuest());&#10;&#10;                // Thêm các nút tùy chọn&#10;                builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                    // Mở EditProjectActivity để chỉnh sửa&#10;                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                    intent.putExtra(&quot;name&quot;, task.getName());&#10;                    intent.putExtra(&quot;desc&quot;, task.getQuest());&#10;                    intent.putExtra(&quot;group&quot;, task.getGroup());&#10;                    intent.putExtra(&quot;start&quot;, task.getDateBegin());&#10;                    intent.putExtra(&quot;end&quot;, task.getDateCompleted());&#10;                    intent.putExtra(&quot;position&quot;, taskIndex);&#10;                    startActivity(intent);&#10;                });&#10;&#10;                builder.setNegativeButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                    // Xác nhận xóa&#10;                    new android.app.AlertDialog.Builder(this)&#10;                        .setTitle(&quot;Xác nhận xóa&quot;)&#10;                        .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                        .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                            MainActivity.taskList.remove(taskIndex);&#10;                            TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                            renderTasks();&#10;                            Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                        })&#10;                        .setNegativeButton(&quot;Hủy&quot;, null)&#10;                        .show();&#10;                });&#10;&#10;                builder.show();&#10;            };&#10;&#10;            // Gán sự kiện click cho cả item và nút dropdown&#10;            if (icDropdown != null) {&#10;                icDropdown.setOnClickListener(openPopupListener);&#10;            }&#10;            // Thêm sự kiện click cho toàn bộ view&#10;            oldView.setOnClickListener(openPopupListener);&#10;&#10;            listOld.addView(oldView);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>