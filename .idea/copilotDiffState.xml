<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/todo/task/EditProjectActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/todo/task/EditProjectActivity.java" />
              <option name="originalContent" value="package com.todo.task;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.os.Bundle;&#10;import android.widget.*;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import java.util.Calendar;&#10;&#10;public class EditProjectActivity extends AppCompatActivity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_project);&#10;&#10;        EditText etProjectName = findViewById(R.id.etProjectName);&#10;        EditText etDescription = findViewById(R.id.etDescription);&#10;        TextView tvTaskGroup = findViewById(R.id.tvTaskGroup);&#10;        TextView tvStarDate = findViewById(R.id.tvStarDate);&#10;        TextView tvEndDate = findViewById(R.id.tvEndDate);&#10;        ImageView igIcDropdown = findViewById(R.id.ig_ic_dropdown);&#10;        Button btnAddProject = findViewById(R.id.btnAddProject);&#10;        ImageButton btnBack = findViewById(R.id.btnBack);&#10;        ImageButton btnNoti = findViewById(R.id.btnNoti);&#10;        String[] taskGroups = {&quot;Công việc&quot;, &quot;Cá nhân&quot;, &quot;Học tập&quot;, &quot;Khác&quot;};&#10;        final Calendar calendar = Calendar.getInstance();&#10;&#10;        // Nhận dữ liệu project từ Intent&#10;        android.content.Intent intent = getIntent();&#10;        String name = intent.getStringExtra(&quot;name&quot;);&#10;        String desc = intent.getStringExtra(&quot;desc&quot;);&#10;        String group = intent.getStringExtra(&quot;group&quot;);&#10;        String start = intent.getStringExtra(&quot;start&quot;);&#10;        String end = intent.getStringExtra(&quot;end&quot;);&#10;        int position = intent.getIntExtra(&quot;position&quot;, -1);&#10;&#10;        if (name != null) etProjectName.setText(name);&#10;        if (desc != null) etDescription.setText(desc);&#10;        if (group != null) tvTaskGroup.setText(group);&#10;        if (start != null) tvStarDate.setText(start);&#10;        if (end != null) tvEndDate.setText(end);&#10;&#10;        btnBack.setOnClickListener(v -&gt; finish());&#10;&#10;        tvTaskGroup.setOnClickListener(v -&gt; {&#10;            new android.app.AlertDialog.Builder(this)&#10;                .setTitle(&quot;Chọn nhóm công việc&quot;)&#10;                .setItems(taskGroups, (dialog, which) -&gt; {&#10;                    tvTaskGroup.setText(taskGroups[which]);&#10;                })&#10;                .show();&#10;        });&#10;        if (igIcDropdown != null) {&#10;            igIcDropdown.setOnClickListener(v -&gt; {&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Chọn nhóm công việc&quot;)&#10;                    .setItems(taskGroups, (dialog, which) -&gt; {&#10;                        tvTaskGroup.setText(taskGroups[which]);&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;&#10;        tvStarDate.setOnClickListener(v -&gt; showDatePicker(tvStarDate));&#10;        tvEndDate.setOnClickListener(v -&gt; showDatePicker(tvEndDate));&#10;&#10;        btnAddProject.setOnClickListener(v -&gt; {&#10;            // Lưu thay đổi vào danh sách project&#10;            String newName = etProjectName.getText().toString().trim();&#10;            String newDesc = etDescription.getText().toString().trim();&#10;            String newGroup = tvTaskGroup.getText().toString();&#10;            String newStart = tvStarDate.getText().toString();&#10;            String newEnd = tvEndDate.getText().toString();&#10;            if (position &gt;= 0 &amp;&amp; position &lt; MainActivity.taskList.size()) {&#10;                Task task = MainActivity.taskList.get(position);&#10;                task.setName(newName);&#10;                task.setQuest(newDesc);&#10;                task.setGroup(newGroup);&#10;                task.setDateBegin(newStart);&#10;                task.setDateCompleted(newEnd);&#10;                // Cập nhật thời gian chỉnh sửa&#10;                task.updateTask(newName, newDesc, newStart, newEnd, newGroup);&#10;                // Lưu lại danh sách Task sau khi sửa&#10;                TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                // Trả kết quả về ProjectListActivity&#10;                setResult(RESULT_OK);&#10;            }&#10;            Toast.makeText(this, &quot;Đã lưu thay đổi!&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void showDatePicker(TextView target) {&#10;        Calendar calendar = Calendar.getInstance();&#10;        int y = calendar.get(Calendar.YEAR);&#10;        int m = calendar.get(Calendar.MONTH);&#10;        int d = calendar.get(Calendar.DAY_OF_MONTH);&#10;        new DatePickerDialog(this, (view, year, month, dayOfMonth) -&gt; {&#10;            String dateStr = String.format(&quot;00:00 %02d-%02d-%d&quot;, dayOfMonth, month + 1, year);&#10;            target.setText(dateStr);&#10;        }, y, m, d).show();&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.todo.task;&#10;&#10;import android.app.DatePickerDialog;&#10;import android.os.Bundle;&#10;import android.widget.*;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import java.util.Calendar;&#10;&#10;public class EditProjectActivity extends AppCompatActivity {&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_edit_project);&#10;&#10;        EditText etProjectName = findViewById(R.id.etProjectName);&#10;        EditText etDescription = findViewById(R.id.etDescription);&#10;        TextView tvTaskGroup = findViewById(R.id.tvTaskGroup);&#10;        TextView tvStarDate = findViewById(R.id.tvStarDate);&#10;        TextView tvEndDate = findViewById(R.id.tvEndDate);&#10;        ImageView igIcDropdown = findViewById(R.id.ig_ic_dropdown);&#10;        Button btnAddProject = findViewById(R.id.btnAddProject);&#10;        ImageButton btnBack = findViewById(R.id.btnBack);&#10;        ImageButton btnNoti = findViewById(R.id.btnNoti);&#10;        String[] taskGroups = {&quot;Công việc&quot;, &quot;Cá nhân&quot;, &quot;Học tập&quot;, &quot;Khác&quot;};&#10;        final Calendar calendar = Calendar.getInstance();&#10;&#10;        // Nhận dữ liệu project từ Intent&#10;        android.content.Intent intent = getIntent();&#10;        String name = intent.getStringExtra(&quot;name&quot;);&#10;        String desc = intent.getStringExtra(&quot;desc&quot;);&#10;        String group = intent.getStringExtra(&quot;group&quot;);&#10;        String start = intent.getStringExtra(&quot;start&quot;);&#10;        String end = intent.getStringExtra(&quot;end&quot;);&#10;        int position = intent.getIntExtra(&quot;position&quot;, -1);&#10;&#10;        if (name != null) etProjectName.setText(name);&#10;        if (desc != null) etDescription.setText(desc);&#10;        if (group != null) tvTaskGroup.setText(group);&#10;        if (start != null) tvStarDate.setText(start);&#10;        if (end != null) tvEndDate.setText(end);&#10;&#10;        btnBack.setOnClickListener(v -&gt; finish());&#10;&#10;        tvTaskGroup.setOnClickListener(v -&gt; {&#10;            new android.app.AlertDialog.Builder(this)&#10;                .setTitle(&quot;Chọn nhóm công việc&quot;)&#10;                .setItems(taskGroups, (dialog, which) -&gt; {&#10;                    tvTaskGroup.setText(taskGroups[which]);&#10;                })&#10;                .show();&#10;        });&#10;        if (igIcDropdown != null) {&#10;            igIcDropdown.setOnClickListener(v -&gt; {&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Chọn nhóm công việc&quot;)&#10;                    .setItems(taskGroups, (dialog, which) -&gt; {&#10;                        tvTaskGroup.setText(taskGroups[which]);&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;&#10;        tvStarDate.setOnClickListener(v -&gt; showDatePicker(tvStarDate));&#10;        tvEndDate.setOnClickListener(v -&gt; showDatePicker(tvEndDate));&#10;&#10;        btnAddProject.setOnClickListener(v -&gt; {&#10;            // Lưu thay đổi vào danh sách project&#10;            String newName = etProjectName.getText().toString().trim();&#10;            String newDesc = etDescription.getText().toString().trim();&#10;            String newGroup = tvTaskGroup.getText().toString();&#10;            String newStart = tvStarDate.getText().toString();&#10;            String newEnd = tvEndDate.getText().toString();&#10;            if (position &gt;= 0 &amp;&amp; position &lt; MainActivity.taskList.size()) {&#10;                Task task = MainActivity.taskList.get(position);&#10;                task.setName(newName);&#10;                task.setQuest(newDesc);&#10;                task.setGroup(newGroup);&#10;                task.setDateBegin(newStart);&#10;                task.setDateCompleted(newEnd);&#10;                // Lưu lại danh sách Task sau khi sửa&#10;                TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                // Trả kết quả về ProjectListActivity&#10;                setResult(RESULT_OK);&#10;            }&#10;            Toast.makeText(this, &quot;Đã lưu thay đổi!&quot;, Toast.LENGTH_SHORT).show();&#10;            finish();&#10;        });&#10;    }&#10;&#10;    private void showDatePicker(TextView target) {&#10;        Calendar calendar = Calendar.getInstance();&#10;        int y = calendar.get(Calendar.YEAR);&#10;        int m = calendar.get(Calendar.MONTH);&#10;        int d = calendar.get(Calendar.DAY_OF_MONTH);&#10;        new DatePickerDialog(this, (view, year, month, dayOfMonth) -&gt; {&#10;            String dateStr = String.format(&quot;00:00 %02d-%02d-%d&quot;, dayOfMonth, month + 1, year);&#10;            target.setText(dateStr);&#10;        }, y, m, d).show();&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/todo/task/ProjectListActivity.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/todo/task/ProjectListActivity.java" />
              <option name="originalContent" value="package com.todo.task;&#10;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class ProjectListActivity extends AppCompatActivity {&#10;    private LinearLayout listRecent, listOld;&#10;    private ArrayList&lt;Task&gt; taskList = MainActivity.taskList;&#10;    private enum SortType { NAME, DATE }&#10;    private SortType sortType = SortType.NAME;&#10;    private boolean isSortAZ = true;&#10;    private TextView tvSortType;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_project_list);&#10;        listRecent = findViewById(R.id.list_recent);&#10;        listOld = findViewById(R.id.list_old);&#10;        tvSortType = findViewById(R.id.tvSortType);&#10;&#10;        // Nút quay lại&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;&#10;        // Nút thông báo: Hiển thị tên các project còn dưới 3 ngày&#10;        findViewById(R.id.btnNoti).setOnClickListener(v -&gt; {&#10;            StringBuilder sb = new StringBuilder();&#10;            for (Task t : taskList) {&#10;                if (t.dayLeft() &gt; 0 &amp;&amp; t.dayLeft() &lt; 3) {&#10;                    sb.append(&quot;- &quot;).append(t.getName()).append(&quot; (còn &quot;).append(t.dayLeft()).append(&quot; ngày)\n&quot;);&#10;                }&#10;            }&#10;            String msg = sb.length() &gt; 0 ? sb.toString() : &quot;Không có project nào sắp hết hạn!&quot;;&#10;            android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;            builder.setTitle(&quot;Project sắp hết hạn (&lt;3 ngày)&quot;)&#10;                .setMessage(msg)&#10;                .setPositiveButton(&quot;Đóng&quot;, null)&#10;                .show();&#10;        });&#10;&#10;        // Nút thêm mới&#10;        findViewById(R.id.btnNewTask).setOnClickListener(v -&gt;&#10;            startActivity(new android.content.Intent(this, addProjectActivity.class))&#10;        );&#10;&#10;        // Sắp xếp khi nhấn vào icon sort&#10;        ImageView sortBtn = findViewById(R.id.ic_sort);&#10;        if (sortBtn != null) {&#10;            sortBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;&#10;        // Nút dropdown ở phần sort: ví dụ hiển thị menu chọn kiểu sort&#10;        ImageView sortDropdownBtn = findViewById(R.id.sort_ic_dropdown);&#10;        if (sortDropdownBtn != null) {&#10;            sortDropdownBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateSortTypeText();&#10;        renderTasks();&#10;    }&#10;&#10;    @Override&#10;    protected void onPause() {&#10;        super.onPause();&#10;        TaskStorage.saveTasks(this, taskList);&#10;    }&#10;&#10;    private void updateSortTypeText() {&#10;        if (tvSortType == null) return;&#10;        if (sortType == SortType.NAME) {&#10;            tvSortType.setText(isSortAZ ? &quot;A-Z&quot; : &quot;Z-A&quot;);&#10;        } else {&#10;            tvSortType.setText(isSortAZ ? &quot;Ngày gần nhất&quot; : &quot;Ngày xa nhất&quot;);&#10;        }&#10;    }&#10;&#10;    private void renderTasks() {&#10;        listRecent.removeAllViews();&#10;        listOld.removeAllViews();&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;&#10;        // Sắp xếp theo thời gian chỉnh sửa gần nhất (updatedAt), xử lý null&#10;        Collections.sort(taskList, (t1, t2) -&gt; {&#10;            if (t1.getUpdatedAt() == null &amp;&amp; t2.getUpdatedAt() == null) return 0;&#10;            if (t1.getUpdatedAt() == null) return 1;&#10;            if (t2.getUpdatedAt() == null) return -1;&#10;            return t2.getUpdatedAt().compareTo(t1.getUpdatedAt());&#10;        });&#10;&#10;        // Hiển thị dự án gần nhất ở listRecent với layout item_task_recent&#10;        if (!taskList.isEmpty()) {&#10;            Task recentTask = taskList.get(0);&#10;            View recentView = inflater.inflate(R.layout.item_task_recent, listRecent, false);&#10;            LinearLayout infoLayout = recentView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = recentView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(recentTask.getName());&#10;                if (tvStatus != null) tvStatus.setText(recentTask.getStatus());&#10;            }&#10;&#10;            // Xử lý sự kiện click vào mũi tên dropdown&#10;            if (icDropdown != null) {&#10;                icDropdown.setOnClickListener(v -&gt; {&#10;                    String[] options = {&quot;Xem chi tiết&quot;, &quot;Chỉnh sửa&quot;, &quot;Xóa&quot;};&#10;                    new android.app.AlertDialog.Builder(this)&#10;                        .setTitle(recentTask.getName())&#10;                        .setItems(options, (dialog, which) -&gt; {&#10;                            switch (which) {&#10;                                case 0: // Xem chi tiết&#10;                                    Toast.makeText(this, &quot;Xem chi tiết: &quot; + recentTask.getName(), Toast.LENGTH_SHORT).show();&#10;                                    break;&#10;                                case 1: // Chỉnh sửa&#10;                                    // Mở EditProjectActivity để chỉnh sửa&#10;                                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                                    intent.putExtra(&quot;name&quot;, recentTask.getName());&#10;                                    intent.putExtra(&quot;desc&quot;, recentTask.getQuest());&#10;                                    intent.putExtra(&quot;group&quot;, recentTask.getGroup());&#10;                                    intent.putExtra(&quot;start&quot;, recentTask.getDateBegin());&#10;                                    intent.putExtra(&quot;end&quot;, recentTask.getDateCompleted());&#10;                                    intent.putExtra(&quot;position&quot;, 0);&#10;                                    startActivity(intent);&#10;                                    break;&#10;                                case 2: // Xóa&#10;                                    new android.app.AlertDialog.Builder(this)&#10;                                        .setTitle(&quot;Xác nhận xóa&quot;)&#10;                                        .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                                        .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                                            MainActivity.taskList.remove(0);&#10;                                            TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                                            renderTasks();&#10;                                            Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                                        })&#10;                                        .setNegativeButton(&quot;Hủy&quot;, null)&#10;                                        .show();&#10;                                    break;&#10;                            }&#10;                        })&#10;                        .show();&#10;                });&#10;            }&#10;&#10;            listRecent.addView(recentView);&#10;        }&#10;&#10;        // Hiển thị các dự án còn lại ở listOld với layout item_task_old&#10;        for (int i = 1; i &lt; taskList.size(); i++) {&#10;            Task task = taskList.get(i);&#10;            View oldView = inflater.inflate(R.layout.item_task_old, listOld, false);&#10;            LinearLayout infoLayout = oldView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = oldView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(task.getName());&#10;                if (tvStatus != null) tvStatus.setText(task.getStatus());&#10;            }&#10;&#10;            // Xử lý sự kiện click vào mũi tên dropdown cho các dự án cũ&#10;            if (icDropdown != null) {&#10;                final int position = i;&#10;                icDropdown.setOnClickListener(v -&gt; {&#10;                    String[] options = {&quot;Xem chi tiết&quot;, &quot;Chỉnh sửa&quot;, &quot;Xóa&quot;};&#10;                    new android.app.AlertDialog.Builder(this)&#10;                        .setTitle(task.getName())&#10;                        .setItems(options, (dialog, which) -&gt; {&#10;                            switch (which) {&#10;                                case 0: // Xem chi tiết&#10;                                    Toast.makeText(this, &quot;Xem chi tiết: &quot; + task.getName(), Toast.LENGTH_SHORT).show();&#10;                                    break;&#10;                                case 1: // Chỉnh sửa&#10;                                    // Mở EditProjectActivity để chỉnh sửa&#10;                                    android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                                    intent.putExtra(&quot;name&quot;, task.getName());&#10;                                    intent.putExtra(&quot;desc&quot;, task.getQuest());&#10;                                    intent.putExtra(&quot;group&quot;, task.getGroup());&#10;                                    intent.putExtra(&quot;start&quot;, task.getDateBegin());&#10;                                    intent.putExtra(&quot;end&quot;, task.getDateCompleted());&#10;                                    intent.putExtra(&quot;position&quot;, position);&#10;                                    startActivity(intent);&#10;                                    break;&#10;                                case 2: // Xóa&#10;                                    new android.app.AlertDialog.Builder(this)&#10;                                        .setTitle(&quot;Xác nhận xóa&quot;)&#10;                                        .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                                        .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                                            MainActivity.taskList.remove(position);&#10;                                            TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                                            renderTasks();&#10;                                            Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                                        })&#10;                                        .setNegativeButton(&quot;Hủy&quot;, null)&#10;                                        .show();&#10;                                    break;&#10;                            }&#10;                        })&#10;                        .show();&#10;                });&#10;            }&#10;&#10;            listOld.addView(oldView);&#10;        }&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.todo.task;&#10;&#10;import android.os.Bundle;&#10;import android.view.LayoutInflater;&#10;import android.view.View;&#10;import android.widget.ImageView;&#10;import android.widget.LinearLayout;&#10;import android.widget.TextView;&#10;import android.widget.Toast;&#10;import androidx.appcompat.app.AppCompatActivity;&#10;import java.util.ArrayList;&#10;import java.util.Collections;&#10;&#10;public class ProjectListActivity extends AppCompatActivity {&#10;    private LinearLayout listRecent, listOld;&#10;    private ArrayList&lt;Task&gt; taskList = MainActivity.taskList;&#10;    private enum SortType { NAME, DATE }&#10;    private SortType sortType = SortType.NAME;&#10;    private boolean isSortAZ = true;&#10;    private TextView tvSortType;&#10;&#10;    @Override&#10;    protected void onCreate(Bundle savedInstanceState) {&#10;        super.onCreate(savedInstanceState);&#10;        setContentView(R.layout.activity_project_list);&#10;        listRecent = findViewById(R.id.list_recent);&#10;        listOld = findViewById(R.id.list_old);&#10;        tvSortType = findViewById(R.id.tvSortType);&#10;&#10;        // Nút quay lại&#10;        findViewById(R.id.btnBack).setOnClickListener(v -&gt; finish());&#10;&#10;        // Nút thông báo: Hiển thị tên các project còn dưới 3 ngày&#10;        findViewById(R.id.btnNoti).setOnClickListener(v -&gt; {&#10;            StringBuilder sb = new StringBuilder();&#10;            for (Task t : taskList) {&#10;                if (t.dayLeft() &gt; 0 &amp;&amp; t.dayLeft() &lt; 3) {&#10;                    sb.append(&quot;- &quot;).append(t.getName()).append(&quot; (còn &quot;).append(t.dayLeft()).append(&quot; ngày)\n&quot;);&#10;                }&#10;            }&#10;            String msg = sb.length() &gt; 0 ? sb.toString() : &quot;Không có project nào sắp hết hạn!&quot;;&#10;            android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;            builder.setTitle(&quot;Project sắp hết hạn (&lt;3 ngày)&quot;)&#10;                .setMessage(msg)&#10;                .setPositiveButton(&quot;Đóng&quot;, null)&#10;                .show();&#10;        });&#10;&#10;        // Nút thêm mới&#10;        findViewById(R.id.btnNewTask).setOnClickListener(v -&gt;&#10;            startActivity(new android.content.Intent(this, addProjectActivity.class))&#10;        );&#10;&#10;        // Sắp xếp khi nhấn vào icon sort&#10;        ImageView sortBtn = findViewById(R.id.ic_sort);&#10;        if (sortBtn != null) {&#10;            sortBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;&#10;        // Nút dropdown ở phần sort: ví dụ hiển thị menu chọn kiểu sort&#10;        ImageView sortDropdownBtn = findViewById(R.id.sort_ic_dropdown);&#10;        if (sortDropdownBtn != null) {&#10;            sortDropdownBtn.setOnClickListener(v -&gt; {&#10;                String[] options = {&quot;Tên (A-Z)&quot;, &quot;Tên (Z-A)&quot;, &quot;Ngày (Gần nhất)&quot;, &quot;Ngày (Xa nhất)&quot;};&#10;                new android.app.AlertDialog.Builder(this)&#10;                    .setTitle(&quot;Sắp xếp dự án&quot;)&#10;                    .setItems(options, (dialog, which) -&gt; {&#10;                        switch (which) {&#10;                            case 0:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 1:&#10;                                sortType = SortType.NAME;&#10;                                isSortAZ = false;&#10;                                break;&#10;                            case 2:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = true;&#10;                                break;&#10;                            case 3:&#10;                                sortType = SortType.DATE;&#10;                                isSortAZ = false;&#10;                                break;&#10;                        }&#10;                        updateSortTypeText();&#10;                        renderTasks();&#10;                    })&#10;                    .show();&#10;            });&#10;        }&#10;    }&#10;&#10;    @Override&#10;    protected void onResume() {&#10;        super.onResume();&#10;        updateSortTypeText();&#10;        renderTasks();&#10;    }&#10;&#10;    @Override&#10;    protected void onPause() {&#10;        super.onPause();&#10;        TaskStorage.saveTasks(this, taskList);&#10;    }&#10;&#10;    private void updateSortTypeText() {&#10;        if (tvSortType == null) return;&#10;        if (sortType == SortType.NAME) {&#10;            tvSortType.setText(isSortAZ ? &quot;A-Z&quot; : &quot;Z-A&quot;);&#10;        } else {&#10;            tvSortType.setText(isSortAZ ? &quot;Ngày gần nhất&quot; : &quot;Ngày xa nhất&quot;);&#10;        }&#10;    }&#10;&#10;    private void renderTasks() {&#10;        listRecent.removeAllViews();&#10;        listOld.removeAllViews();&#10;        LayoutInflater inflater = LayoutInflater.from(this);&#10;&#10;        // Sắp xếp theo thời gian chỉnh sửa gần nhất (updatedAt), xử lý null&#10;        Collections.sort(taskList, (t1, t2) -&gt; {&#10;            if (t1.getUpdatedAt() == null &amp;&amp; t2.getUpdatedAt() == null) return 0;&#10;            if (t1.getUpdatedAt() == null) return 1;&#10;            if (t2.getUpdatedAt() == null) return -1;&#10;            return t2.getUpdatedAt().compareTo(t1.getUpdatedAt());&#10;        });&#10;&#10;        // Hiển thị dự án gần nhất ở listRecent với layout item_task_recent&#10;        if (!taskList.isEmpty()) {&#10;            Task recentTask = taskList.get(0);&#10;            View recentView = inflater.inflate(R.layout.item_task_recent, listRecent, false);&#10;            LinearLayout infoLayout = recentView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = recentView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(recentTask.getName());&#10;                if (tvStatus != null) tvStatus.setText(recentTask.getStatus());&#10;            }&#10;&#10;            // Xử lý sự kiện click vào mũi tên dropdown&#10;            if (icDropdown != null) {&#10;                icDropdown.setOnClickListener(v -&gt; {&#10;                    // Tạo AlertDialog với layout tùy chỉnh&#10;                    android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                    builder.setTitle(recentTask.getName());&#10;                    &#10;                    // Hiển thị mô tả của dự án&#10;                    builder.setMessage(recentTask.getQuest());&#10;                    &#10;                    // Thêm các nút tùy chọn&#10;                    builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                        // Mở EditProjectActivity để chỉnh sửa&#10;                        android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                        intent.putExtra(&quot;name&quot;, recentTask.getName());&#10;                        intent.putExtra(&quot;desc&quot;, recentTask.getQuest());&#10;                        intent.putExtra(&quot;group&quot;, recentTask.getGroup());&#10;                        intent.putExtra(&quot;start&quot;, recentTask.getDateBegin());&#10;                        intent.putExtra(&quot;end&quot;, recentTask.getDateCompleted());&#10;                        intent.putExtra(&quot;position&quot;, 0);&#10;                        startActivity(intent);&#10;                    });&#10;                    &#10;                    builder.setNegativeButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                        // Xác nhận xóa&#10;                        new android.app.AlertDialog.Builder(this)&#10;                            .setTitle(&quot;Xác nhận xóa&quot;)&#10;                            .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                            .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                                MainActivity.taskList.remove(0);&#10;                                TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                                renderTasks();&#10;                                Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                            })&#10;                            .setNegativeButton(&quot;Hủy&quot;, null)&#10;                            .show();&#10;                    });&#10;                    &#10;                    builder.show();&#10;                });&#10;            }&#10;&#10;            listRecent.addView(recentView);&#10;        }&#10;&#10;        // Hiển thị các dự án còn lại ở listOld với layout item_task_old&#10;        for (int i = 1; i &lt; taskList.size(); i++) {&#10;            Task task = taskList.get(i);&#10;            View oldView = inflater.inflate(R.layout.item_task_old, listOld, false);&#10;            LinearLayout infoLayout = oldView.findViewById(R.id.infoLayout);&#10;            ImageView icDropdown = oldView.findViewById(R.id.ic_dropdown);&#10;&#10;            if (infoLayout != null &amp;&amp; infoLayout.getChildCount() &gt;= 2) {&#10;                TextView tvName = (TextView) infoLayout.getChildAt(0);&#10;                TextView tvStatus = (TextView) infoLayout.getChildAt(1);&#10;                if (tvName != null) tvName.setText(task.getName());&#10;                if (tvStatus != null) tvStatus.setText(task.getStatus());&#10;            }&#10;&#10;            // Xử lý sự kiện click vào mũi tên dropdown cho các dự án cũ&#10;            if (icDropdown != null) {&#10;                final int position = i;&#10;                icDropdown.setOnClickListener(v -&gt; {&#10;                    // Tạo AlertDialog với layout tùy chỉnh&#10;                    android.app.AlertDialog.Builder builder = new android.app.AlertDialog.Builder(this);&#10;                    builder.setTitle(task.getName());&#10;                    &#10;                    // Hiển thị mô tả của dự án&#10;                    builder.setMessage(task.getQuest());&#10;                    &#10;                    // Thêm các nút tùy chọn&#10;                    builder.setPositiveButton(&quot;Chỉnh sửa&quot;, (dialog, which) -&gt; {&#10;                        // Mở EditProjectActivity để chỉnh sửa&#10;                        android.content.Intent intent = new android.content.Intent(this, EditProjectActivity.class);&#10;                        intent.putExtra(&quot;name&quot;, task.getName());&#10;                        intent.putExtra(&quot;desc&quot;, task.getQuest());&#10;                        intent.putExtra(&quot;group&quot;, task.getGroup());&#10;                        intent.putExtra(&quot;start&quot;, task.getDateBegin());&#10;                        intent.putExtra(&quot;end&quot;, task.getDateCompleted());&#10;                        intent.putExtra(&quot;position&quot;, position);&#10;                        startActivity(intent);&#10;                    });&#10;                    &#10;                    builder.setNegativeButton(&quot;Xóa&quot;, (dialog, which) -&gt; {&#10;                        // Xác nhận xóa&#10;                        new android.app.AlertDialog.Builder(this)&#10;                            .setTitle(&quot;Xác nhận xóa&quot;)&#10;                            .setMessage(&quot;Bạn có chắc chắn muốn xóa dự án này không?&quot;)&#10;                            .setPositiveButton(&quot;Xóa&quot;, (d, w) -&gt; {&#10;                                MainActivity.taskList.remove(position);&#10;                                TaskStorage.saveTasks(this, MainActivity.taskList);&#10;                                renderTasks();&#10;                                Toast.makeText(this, &quot;Đã xóa dự án&quot;, Toast.LENGTH_SHORT).show();&#10;                            })&#10;                            .setNegativeButton(&quot;Hủy&quot;, null)&#10;                            .show();&#10;                    });&#10;                    &#10;                    builder.show();&#10;                });&#10;            }&#10;&#10;            listOld.addView(oldView);&#10;        }&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/java/com/todo/task/Task.java">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/java/com/todo/task/Task.java" />
              <option name="originalContent" value="package com.todo.task;&#10;&#10;import java.time.LocalDateTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;public class Task {&#10;    private String name;                  // Tên nhiệm vụ&#10;    private String quest;                 // Nội dung hoặc mô tả nhiệm vụ&#10;    private LocalDateTime dateBegin;     // Ngày bắt đầu nhiệm vụ&#10;    private LocalDateTime dateCompleted; // Hạn chót hoàn thành nhiệm vụ&#10;    private String group;                // Nhóm nhiệm vụ&#10;    private LocalDateTime updatedAt; // Thời gian chỉnh sửa gần nhất&#10;&#10;    // Constructor đầy đủ&#10;    public Task(String name, String quest, String dateBeginStr, String dateCompletedStr, String group) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.group = group;&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Constructor chỉ có ngày hoàn thành&#10;    public Task(String name, String quest, String dateCompletedStr) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = LocalDateTime.now();&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Chuyển chuỗi định dạng &quot;HH:mm dd-MM-yyyy&quot; thành LocalDateTime&#10;    private LocalDateTime parseDateTime(String dateStr) {&#10;        if (dateStr == null || dateStr.trim().isEmpty()) {&#10;            return null;&#10;        }&#10;        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;HH:mm dd-MM-yyyy&quot;);&#10;        return LocalDateTime.parse(dateStr, formatter);&#10;    }&#10;&#10;    // Getter tên nhiệm vụ&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    // Getter nội dung&#10;    public String getQuest() {&#10;        return quest;&#10;    }&#10;&#10;    // Trả về ngày bắt đầu dưới dạng chuỗi&#10;    public String getDateBegin() {&#10;        return formatDateTime(dateBegin);&#10;    }&#10;&#10;    // Trả về ngày hoàn thành dưới dạng chuỗi&#10;    public String getDateCompleted() {&#10;        return formatDateTime(dateCompleted);&#10;    }&#10;&#10;    // Getter nhóm&#10;    public String getGroup() {&#10;        return group;&#10;    }&#10;&#10;    // Getter thời gian chỉnh sửa&#10;    public LocalDateTime getUpdatedAt() {&#10;        return updatedAt;&#10;    }&#10;&#10;    // Setter tên&#10;    public void setName(String name) {&#10;        this.name = name;&#10;    }&#10;&#10;    // Setter nội dung&#10;    public void setQuest(String quest) {&#10;        this.quest = quest;&#10;    }&#10;&#10;    // Setter nhóm&#10;    public void setGroup(String group) {&#10;        this.group = group;&#10;    }&#10;&#10;    // Setter ngày bắt đầu&#10;    public void setDateBegin(String dateBeginStr) {&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;    }&#10;&#10;    // Setter ngày hoàn thành&#10;    public void setDateCompleted(String dateCompletedStr) {&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;    }&#10;&#10;    // Cập nhật thông tin nhiệm vụ&#10;    public void updateTask(String name, String quest, String dateBeginStr, String dateCompletedStr, String group) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.group = group;&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Tính số ngày còn lại&#10;    public int dayLeft() {&#10;        if (dateCompleted == null) {&#10;            return Integer.MAX_VALUE; // hoặc -1 nếu muốn báo lỗi&#10;        }&#10;        try {&#10;            LocalDateTime now = LocalDateTime.now();&#10;            if (dateCompleted.toLocalDate() == null) return Integer.MAX_VALUE;&#10;            if (now.toLocalDate() == null) return Integer.MAX_VALUE;&#10;            return (int) java.time.Duration.between(now.toLocalDate().atStartOfDay(), dateCompleted.toLocalDate().atStartOfDay()).toDays();&#10;        } catch (Exception e) {&#10;            return Integer.MAX_VALUE;&#10;        }&#10;    }&#10;&#10;&#10;    // Trạng thái deadline&#10;    public String getStatus() {&#10;        if (dateCompleted == null) {&#10;            return &quot;Trạng thái: Không xác định (thiếu ngày hoàn thành)&quot;;&#10;        }&#10;&#10;        int dayLeft = dayLeft();&#10;        String status = &quot;Trạng thái: &quot;;&#10;&#10;        if (dayLeft &lt;= 0) {&#10;            status += &quot;Quá hạn (vượt &quot; + (-dayLeft) + &quot; ngày)&quot;;&#10;        } else {&#10;            status += &quot;Còn hạn (&quot; + dayLeft + &quot; ngày còn lại)&quot;;&#10;        }&#10;&#10;        return status;&#10;    }&#10;&#10;    // Định dạng ngày thành chuỗi&#10;    private String formatDateTime(LocalDateTime dateTime) {&#10;        if (dateTime == null) return &quot;Không xác định&quot;;&#10;        try {&#10;            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;HH:mm dd-MM-yyyy&quot;);&#10;            return dateTime.format(formatter);&#10;        } catch (Exception e) {&#10;            return &quot;Không xác định&quot;;&#10;        }&#10;    }&#10;&#10;    // Hiển thị thông tin Task&#10;    @Override&#10;    public String toString() {&#10;        return name + &quot; | &quot; + quest + &quot; | &quot; + getDateBegin() + &quot; | &quot; + getDateCompleted() + &quot; | &quot; + group;&#10;    }&#10;}&#10;" />
              <option name="updatedContent" value="package com.todo.task;&#10;&#10;import java.time.LocalDateTime;&#10;import java.time.format.DateTimeFormatter;&#10;&#10;public class Task {&#10;    private String name;                  // Tên nhiệm vụ&#10;    private String quest;                 // Nội dung hoặc mô tả nhiệm vụ&#10;    private LocalDateTime dateBegin;     // Ngày bắt đầu nhiệm vụ&#10;    private LocalDateTime dateCompleted; // Hạn chót hoàn thành nhiệm vụ&#10;    private String group;                // Nhóm nhiệm vụ&#10;    private LocalDateTime updatedAt; // Thời gian chỉnh sửa gần nhất&#10;&#10;    // Constructor đầy đủ&#10;    public Task(String name, String quest, String dateBeginStr, String dateCompletedStr, String group) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.group = group;&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Constructor chỉ có ngày hoàn thành&#10;    public Task(String name, String quest, String dateCompletedStr) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = LocalDateTime.now();&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Chuyển chuỗi định dạng &quot;HH:mm dd-MM-yyyy&quot; thành LocalDateTime&#10;    private LocalDateTime parseDateTime(String dateStr) {&#10;        if (dateStr == null || dateStr.trim().isEmpty()) {&#10;            return null;&#10;        }&#10;        DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;HH:mm dd-MM-yyyy&quot;);&#10;        return LocalDateTime.parse(dateStr, formatter);&#10;    }&#10;&#10;    // Getter tên nhiệm vụ&#10;    public String getName() {&#10;        return name;&#10;    }&#10;&#10;    // Getter nội dung&#10;    public String getQuest() {&#10;        return quest;&#10;    }&#10;&#10;    // Trả về ngày bắt đầu dưới dạng chuỗi&#10;    public String getDateBegin() {&#10;        return formatDateTime(dateBegin);&#10;    }&#10;&#10;    // Trả về ngày hoàn thành dưới dạng chuỗi&#10;    public String getDateCompleted() {&#10;        return formatDateTime(dateCompleted);&#10;    }&#10;&#10;    // Getter nhóm&#10;    public String getGroup() {&#10;        return group;&#10;    }&#10;&#10;    // Getter thời gian chỉnh sửa&#10;    public LocalDateTime getUpdatedAt() {&#10;        return updatedAt;&#10;    }&#10;&#10;    // Setter tên&#10;    public void setName(String name) {&#10;        this.name = name;&#10;        this.updatedAt = LocalDateTime.now(); // Cập nhật thời gian chỉnh sửa&#10;    }&#10;&#10;    // Setter nội dung&#10;    public void setQuest(String quest) {&#10;        this.quest = quest;&#10;        this.updatedAt = LocalDateTime.now(); // Cập nhật thời gian chỉnh sửa&#10;    }&#10;&#10;    // Setter nhóm&#10;    public void setGroup(String group) {&#10;        this.group = group;&#10;        this.updatedAt = LocalDateTime.now(); // Cập nhật thời gian chỉnh sửa&#10;    }&#10;&#10;    // Setter ngày bắt đầu&#10;    public void setDateBegin(String dateBeginStr) {&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;        this.updatedAt = LocalDateTime.now(); // Cập nhật thời gian chỉnh sửa&#10;    }&#10;&#10;    // Setter ngày hoàn thành&#10;    public void setDateCompleted(String dateCompletedStr) {&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.updatedAt = LocalDateTime.now(); // Cập nhật thời gian chỉnh sửa&#10;    }&#10;&#10;    // Cập nhật thông tin nhiệm vụ&#10;    public void updateTask(String name, String quest, String dateBeginStr, String dateCompletedStr, String group) {&#10;        this.name = name;&#10;        this.quest = quest;&#10;        this.dateBegin = parseDateTime(dateBeginStr);&#10;        this.dateCompleted = parseDateTime(dateCompletedStr);&#10;        this.group = group;&#10;        this.updatedAt = LocalDateTime.now();&#10;    }&#10;&#10;    // Tính số ngày còn lại&#10;    public int dayLeft() {&#10;        if (dateCompleted == null) {&#10;            return Integer.MAX_VALUE; // hoặc -1 nếu muốn báo lỗi&#10;        }&#10;        try {&#10;            LocalDateTime now = LocalDateTime.now();&#10;            if (dateCompleted.toLocalDate() == null) return Integer.MAX_VALUE;&#10;            if (now.toLocalDate() == null) return Integer.MAX_VALUE;&#10;            return (int) java.time.Duration.between(now.toLocalDate().atStartOfDay(), dateCompleted.toLocalDate().atStartOfDay()).toDays();&#10;        } catch (Exception e) {&#10;            return Integer.MAX_VALUE;&#10;        }&#10;    }&#10;&#10;&#10;    // Trạng thái deadline&#10;    public String getStatus() {&#10;        if (dateCompleted == null) {&#10;            return &quot;Trạng thái: Không xác định (thiếu ngày hoàn thành)&quot;;&#10;        }&#10;&#10;        int dayLeft = dayLeft();&#10;        String status = &quot;Trạng thái: &quot;;&#10;&#10;        if (dayLeft &lt;= 0) {&#10;            status += &quot;Quá hạn (vượt &quot; + (-dayLeft) + &quot; ngày)&quot;;&#10;        } else {&#10;            status += &quot;Còn hạn (&quot; + dayLeft + &quot; ngày còn lại)&quot;;&#10;        }&#10;&#10;        return status;&#10;    }&#10;&#10;    // Định dạng ngày thành chuỗi&#10;    private String formatDateTime(LocalDateTime dateTime) {&#10;        if (dateTime == null) return &quot;Không xác định&quot;;&#10;        try {&#10;            DateTimeFormatter formatter = DateTimeFormatter.ofPattern(&quot;HH:mm dd-MM-yyyy&quot;);&#10;            return dateTime.format(formatter);&#10;        } catch (Exception e) {&#10;            return &quot;Không xác định&quot;;&#10;        }&#10;    }&#10;&#10;    // Hiển thị thông tin Task&#10;    @Override&#10;    public String toString() {&#10;        return name + &quot; | &quot; + quest + &quot; | &quot; + getDateBegin() + &quot; | &quot; + getDateCompleted() + &quot; | &quot; + group;&#10;    }&#10;}" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/app/src/main/res/layout/activity_project_list.xml">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/app/src/main/res/layout/activity_project_list.xml" />
              <option name="originalContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@drawable/bg_gradient&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.projectList&quot;&gt;&#10;    &lt;!-- Header --&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/titleBar&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;56dp&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnBack&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:background=&quot;?selectableItemBackgroundBorderless&quot;&#10;            android:src=&quot;@drawable/ic_arrow_back&quot;&#10;            tools:ignore=&quot;TouchTargetSizeCheck,SpeakableTextPresentCheck&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvTitle&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;Danh sách dự án&quot;&#10;            android:textColor=&quot;#222222&quot;&#10;            android:textSize=&quot;22sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnNoti&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:src=&quot;@drawable/ic_noti&quot;&#10;            tools:ignore=&quot;SpeakableTextPresentCheck,TouchTargetSizeCheck&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/llSort&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;60dp&quot;&#10;        android:background=&quot;@drawable/bg_round_white&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/titleBar&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginHorizontal=&quot;16dp&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/ic_sort&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:src=&quot;@drawable/ic_sort&quot;&#10;            android:background=&quot;@drawable/bg_round_pink&quot;&#10;            android:padding=&quot;6dp&quot;&#10;            android:contentDescription=&quot;Sort&quot;/&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;12dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Sắp xếp&quot;&#10;                android:textColor=&quot;#979797&quot;&#10;                android:textSize=&quot;12sp&quot;/&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSortType&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A-Z&quot;&#10;                android:textColor=&quot;#222&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textSize=&quot;15sp&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;View&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;/&gt;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/sort_ic_dropdown&quot;&#10;            android:layout_width=&quot;24dp&quot;&#10;            android:layout_height=&quot;24dp&quot;&#10;            android:src=&quot;@drawable/ic_dropdown&quot;&#10;            android:contentDescription=&quot;Dropdown&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Task List Card --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/containerCard&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:background=&quot;@drawable/bg_card_white&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginStart=&quot;8dp&quot;&#10;        android:layout_marginEnd=&quot;8dp&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/llSort&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnNewTask&quot;&gt;&#10;        &lt;!-- Recent project label --&gt;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvRecentLabel&quot;&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:text=&quot;Dự án gần đây&quot;&#10;            android:textColor=&quot;#979797&quot;&#10;            android:textSize=&quot;12sp&quot;&#10;            android:paddingTop=&quot;3dp&quot;&#10;            android:paddingBottom=&quot;5dp&quot;/&gt;&#10;&#10;        &lt;!-- Scroll View để có thể cuộn danh sách dự án --&gt;&#10;        &lt;ScrollView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:fillViewport=&quot;true&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/list_recent&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;/&gt;&#10;&#10;                &lt;!-- Old project label --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvOldLabel&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Dự án cũ&quot;&#10;                    android:textColor=&quot;#979797&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:paddingTop=&quot;15dp&quot;&#10;                    android:paddingBottom=&quot;5dp&quot;/&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/list_old&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;/&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/ScrollView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- New Task Button --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnNewTask&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginHorizontal=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;60dp&quot;&#10;        android:backgroundTint=&quot;#7467F0&quot;&#10;        android:text=&quot;Dự Án Mới&quot;&#10;        android:textAllCaps=&quot;false&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:drawableLeft=&quot;@drawable/ic_add&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:elevation=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;/&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/task_list&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&#10;        android:background=&quot;#00FFFFFF&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/containerCard&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;/&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
              <option name="updatedContent" value="&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;&#10;&lt;androidx.constraintlayout.widget.ConstraintLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&#10;    xmlns:app=&quot;http://schemas.android.com/apk/res-auto&quot;&#10;    xmlns:tools=&quot;http://schemas.android.com/tools&quot;&#10;    android:id=&quot;@+id/main&quot;&#10;    android:orientation=&quot;vertical&quot;&#10;    android:background=&quot;@drawable/bg_gradient&quot;&#10;    android:layout_width=&quot;match_parent&quot;&#10;    android:layout_height=&quot;match_parent&quot;&#10;    tools:context=&quot;.projectList&quot;&gt;&#10;    &lt;!-- Header --&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/titleBar&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:layout_marginTop=&quot;56dp&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:padding=&quot;16dp&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintTop_toTopOf=&quot;parent&quot;&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnBack&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:background=&quot;?selectableItemBackgroundBorderless&quot;&#10;            android:src=&quot;@drawable/ic_arrow_back&quot;&#10;            tools:ignore=&quot;TouchTargetSizeCheck,SpeakableTextPresentCheck&quot; /&gt;&#10;&#10;        &lt;TextView&#10;            android:id=&quot;@+id/tvTitle&quot;&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:layout_weight=&quot;1&quot;&#10;            android:gravity=&quot;center&quot;&#10;            android:text=&quot;Danh sách dự án&quot;&#10;            android:textColor=&quot;#222222&quot;&#10;            android:textSize=&quot;22sp&quot;&#10;            android:textStyle=&quot;bold&quot; /&gt;&#10;&#10;        &lt;ImageButton&#10;            android:id=&quot;@+id/btnNoti&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:background=&quot;@android:color/transparent&quot;&#10;            android:src=&quot;@drawable/ic_noti&quot;&#10;            tools:ignore=&quot;SpeakableTextPresentCheck,TouchTargetSizeCheck&quot; /&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/llSort&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;60dp&quot;&#10;        android:background=&quot;@drawable/bg_round_white&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        android:orientation=&quot;horizontal&quot;&#10;        android:gravity=&quot;center_vertical&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@+id/titleBar&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginHorizontal=&quot;16dp&quot;&gt;&#10;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/ic_sort&quot;&#10;            android:layout_width=&quot;32dp&quot;&#10;            android:layout_height=&quot;32dp&quot;&#10;            android:src=&quot;@drawable/ic_sort&quot;&#10;            android:background=&quot;@drawable/bg_round_pink&quot;&#10;            android:padding=&quot;6dp&quot;&#10;            android:contentDescription=&quot;Sort&quot;/&gt;&#10;&#10;        &lt;LinearLayout&#10;            android:layout_width=&quot;wrap_content&quot;&#10;            android:layout_height=&quot;wrap_content&quot;&#10;            android:orientation=&quot;vertical&quot;&#10;            android:layout_marginStart=&quot;12dp&quot;&gt;&#10;&#10;            &lt;TextView&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;Sắp xếp&quot;&#10;                android:textColor=&quot;#979797&quot;&#10;                android:textSize=&quot;12sp&quot;/&gt;&#10;            &lt;TextView&#10;                android:id=&quot;@+id/tvSortType&quot;&#10;                android:layout_width=&quot;wrap_content&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:text=&quot;A-Z&quot;&#10;                android:textColor=&quot;#222&quot;&#10;                android:textStyle=&quot;bold&quot;&#10;                android:textSize=&quot;15sp&quot;/&gt;&#10;        &lt;/LinearLayout&gt;&#10;&#10;        &lt;View&#10;            android:layout_width=&quot;0dp&quot;&#10;            android:layout_height=&quot;0dp&quot;&#10;            android:layout_weight=&quot;1&quot;/&gt;&#10;        &lt;ImageView&#10;            android:id=&quot;@+id/sort_ic_dropdown&quot;&#10;            android:layout_width=&quot;24dp&quot;&#10;            android:layout_height=&quot;24dp&quot;&#10;            android:src=&quot;@drawable/ic_dropdown&quot;&#10;            android:contentDescription=&quot;Dropdown&quot;/&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- Task List Card --&gt;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/containerCard&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;0dp&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:background=&quot;@drawable/bg_card_white&quot;&#10;        android:layout_marginTop=&quot;16dp&quot;&#10;        android:layout_marginStart=&quot;8dp&quot;&#10;        android:layout_marginEnd=&quot;8dp&quot;&#10;        android:layout_marginBottom=&quot;16dp&quot;&#10;        android:padding=&quot;12dp&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/llSort&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;&#10;        app:layout_constraintBottom_toTopOf=&quot;@+id/btnNewTask&quot;&gt;&#10;        &lt;!-- Scroll View để có thể cuộn danh sách dự án --&gt;&#10;        &lt;ScrollView&#10;            android:layout_width=&quot;match_parent&quot;&#10;            android:layout_height=&quot;match_parent&quot;&#10;            android:fillViewport=&quot;true&quot;&gt;&#10;&#10;            &lt;LinearLayout&#10;                android:layout_width=&quot;match_parent&quot;&#10;                android:layout_height=&quot;wrap_content&quot;&#10;                android:orientation=&quot;vertical&quot;&gt;&#10;&#10;                &lt;!-- Recent project label --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvRecentLabel&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Dự án gần đây&quot;&#10;                    android:textColor=&quot;#979797&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:paddingTop=&quot;3dp&quot;&#10;                    android:paddingBottom=&quot;5dp&quot;/&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/list_recent&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;/&gt;&#10;&#10;                &lt;!-- Old project label --&gt;&#10;                &lt;TextView&#10;                    android:id=&quot;@+id/tvOldLabel&quot;&#10;                    android:layout_width=&quot;wrap_content&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:text=&quot;Dự án cũ&quot;&#10;                    android:textColor=&quot;#979797&quot;&#10;                    android:textSize=&quot;12sp&quot;&#10;                    android:paddingTop=&quot;15dp&quot;&#10;                    android:paddingBottom=&quot;5dp&quot;/&gt;&#10;&#10;                &lt;LinearLayout&#10;                    android:id=&quot;@+id/list_old&quot;&#10;                    android:layout_width=&quot;match_parent&quot;&#10;                    android:layout_height=&quot;wrap_content&quot;&#10;                    android:orientation=&quot;vertical&quot;/&gt;&#10;            &lt;/LinearLayout&gt;&#10;        &lt;/ScrollView&gt;&#10;    &lt;/LinearLayout&gt;&#10;&#10;    &lt;!-- New Task Button --&gt;&#10;    &lt;Button&#10;        android:id=&quot;@+id/btnNewTask&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;56dp&quot;&#10;        android:layout_marginHorizontal=&quot;24dp&quot;&#10;        android:layout_marginBottom=&quot;60dp&quot;&#10;        android:backgroundTint=&quot;#7467F0&quot;&#10;        android:text=&quot;Dự Án Mới&quot;&#10;        android:textAllCaps=&quot;false&quot;&#10;        android:textColor=&quot;@android:color/white&quot;&#10;        android:textSize=&quot;18sp&quot;&#10;        android:drawableLeft=&quot;@drawable/ic_add&quot;&#10;        android:gravity=&quot;center&quot;&#10;        android:elevation=&quot;8dp&quot;&#10;        app:layout_constraintBottom_toBottomOf=&quot;parent&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;/&gt;&#10;&#10;    &lt;LinearLayout&#10;        android:id=&quot;@+id/task_list&quot;&#10;        android:layout_width=&quot;0dp&quot;&#10;        android:layout_height=&quot;wrap_content&quot;&#10;        android:orientation=&quot;vertical&quot;&#10;        android:layout_marginTop=&quot;8dp&quot;&#10;        android:layout_marginBottom=&quot;8dp&quot;&#10;        android:background=&quot;#00FFFFFF&quot;&#10;        app:layout_constraintTop_toBottomOf=&quot;@id/containerCard&quot;&#10;        app:layout_constraintStart_toStartOf=&quot;parent&quot;&#10;        app:layout_constraintEnd_toEndOf=&quot;parent&quot;/&gt;&#10;&#10;&lt;/androidx.constraintlayout.widget.ConstraintLayout&gt;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>